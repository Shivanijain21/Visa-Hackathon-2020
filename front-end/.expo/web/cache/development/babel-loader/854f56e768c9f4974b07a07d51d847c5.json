{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theming = require(\"../../core/theming\");\n\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Avatar/AvatarImage.tsx\";\nvar defaultSize = 64;\n\nvar AvatarImage = function (_React$Component) {\n  (0, _inherits2.default)(AvatarImage, _React$Component);\n\n  function AvatarImage() {\n    (0, _classCallCheck2.default)(this, AvatarImage);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AvatarImage).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(AvatarImage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$size = _this$props.size,\n          size = _this$props$size === void 0 ? defaultSize : _this$props$size,\n          source = _this$props.source,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"size\", \"source\", \"style\", \"theme\"]);\n      var colors = theme.colors;\n\n      var _ref = _reactNative.StyleSheet.flatten(style) || {},\n          _ref$backgroundColor = _ref.backgroundColor,\n          backgroundColor = _ref$backgroundColor === void 0 ? colors.primary : _ref$backgroundColor;\n\n      return React.createElement(_reactNative.View, (0, _extends2.default)({\n        style: [{\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor: backgroundColor\n        }, style]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }), React.createElement(_reactNative.Image, {\n        source: source,\n        style: {\n          width: size,\n          height: size,\n          borderRadius: size / 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        }\n      }));\n    }\n  }]);\n  return AvatarImage;\n}(React.Component);\n\n(0, _defineProperty2.default)(AvatarImage, \"displayName\", 'Avatar.Image');\n(0, _defineProperty2.default)(AvatarImage, \"defaultProps\", {\n  size: defaultSize\n});\n\nvar _default = (0, _theming.withTheme)(AvatarImage);\n\nexports.default = _default;","map":{"version":3,"sources":["AvatarImage.tsx"],"names":["defaultSize","AvatarImage","React","Component","size","source","style","theme","rest","colors","backgroundColor","StyleSheet","width","height","borderRadius"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AASA,IAAA,QAAA,GAAA,OAAA,sBAAA;;;AAGA,IAAMA,WAAW,GAAjB,EAAA;;AAqCMC,IAAAA,W;;;;;;;;;;6BAOK;AAAA,UAAA,WAAA,GACuD,KADvD,KAAA;AAAA,UAAA,gBAAA,GAAA,WAAA,CAAA,IAAA;AAAA,UACCG,IADD,GAAA,gBAAA,KAAA,KAAA,CAAA,GAAA,WAAA,GAAA,gBAAA;AAAA,UACqBC,MADrB,GAAA,WAAA,CAAA,MAAA;AAAA,UAC6BC,KAD7B,GAAA,WAAA,CAAA,KAAA;AAAA,UACoCC,KADpC,GAAA,WAAA,CAAA,KAAA;AAAA,UAC8CC,IAD9C,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,WAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAA;AAAA,UAECC,MAFD,GAEYF,KAFZ,CAAA,MAAA;;AAAA,UAAA,IAAA,GAKLI,YAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CAAAA,KAAAA,KALK,EAAA;AAAA,UAAA,oBAAA,GAAA,IAAA,CAAA,eAAA;AAAA,UAICD,eAJD,GAAA,oBAAA,KAAA,KAAA,CAAA,GAImBD,MAAM,CAJzB,OAAA,GAAA,oBAAA;;AAOP,aACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,QAAA,KAAK,EAAE,CACL;AACEG,UAAAA,KAAK,EADP,IAAA;AAEEC,UAAAA,MAAM,EAFR,IAAA;AAGEC,UAAAA,YAAY,EAAEV,IAAI,GAHpB,CAAA;AAIEM,UAAAA,eAAe,EALZ;AACL,SADK,EADT,KACS;AADT,OAAA,EAAA,IAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,CAAA,EAYE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,KAAA,EAAA;AACE,QAAA,MAAM,EADR,MAAA;AAEE,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAP,IAAA;AAAeC,UAAAA,MAAM,EAArB,IAAA;AAA6BC,UAAAA,YAAY,EAAEV,IAAI,GAFxD;AAES,SAFT;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAbJ;AAaI;AAAA,OAAA,CAZF,CADF;;;;EAdsBF,KAAK,CAACC,S,CAA1BF;;8BAAAA,W,iBACiB,c;8BADjBA,W,kBAGkB;AACpBG,EAAAA,IAAI,EADgB;AAAA,C;;eAiCT,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,WAAA,C","sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n  ImageSourcePropType,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\nconst defaultSize = 64;\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Image to display for the `Avatar`.\n   */\n  source: ImageSourcePropType;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-image.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n * );\n * ```\n */\nclass AvatarImage extends React.Component<Props> {\n  static displayName = 'Avatar.Image';\n\n  static defaultProps = {\n    size: defaultSize,\n  };\n\n  render() {\n    const { size = defaultSize, source, style, theme, ...rest } = this.props;\n    const { colors } = theme;\n\n    const { backgroundColor = colors.primary } =\n      StyleSheet.flatten(style) || {};\n\n    return (\n      <View\n        style={[\n          {\n            width: size,\n            height: size,\n            borderRadius: size / 2,\n            backgroundColor,\n          },\n          style,\n        ]}\n        {...rest}\n      >\n        <Image\n          source={source}\n          style={{ width: size, height: size, borderRadius: size / 2 }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default withTheme(AvatarImage);\n"]},"metadata":{},"sourceType":"script"}